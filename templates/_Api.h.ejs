#pragma once

#include "<%- api.name %>DataModels.h"
#include "AuthTokens.h"
#include "HttpClient.h"
#include "TaskQueue.h"

namespace PlayFab
{

class <%- api.name %>API
{
public:
    <%- api.name %>API(SharedPtr<HttpClient const> httpClient<%
if (categorizedApi.otherCallsRequireSecretKey) { 
%>, SharedPtr<String const> secretKey<%
} else { 
%>, SharedPtr<AuthTokens const> tokens<%
} %>);
    <%- api.name %>API(const <%- api.name %>API& source) = delete;
    <%- api.name %>API& operator=(const <%- api.name %>API& source) = delete;
    ~<%- api.name %>API() = default;

    // ------------ Generated API calls<%
for (var i = 0; i < categorizedApi.otherCalls.length; i++) {
    var call = categorizedApi.otherCalls[i];
    var static = call.auth === "None" ? "static " : ""; // Calls which don't require auth can be static
    var constModifier = call.auth === "None" ? "" : " const";
    var resultT = call.result === "void" ? "AsyncOp<void>" : "AsyncOp<" + api.name + "Models::" + call.result + ">";
    var requestParam = call.request === "void" ? "" : "const PlayFab" + api.name + call.request + "& request, "; 
    var httpClientParam = call.auth === "None" ? "SharedPtr<HttpClient const> httpClient, " : ""; %>
    <%- static %><%- resultT %> <%- call.name %>(<%- requestParam %><%- httpClientParam %>const TaskQueue& queue)<%- constModifier %>; <%
} %>

private:
    SharedPtr<HttpClient const> m_httpClient;<%
if (categorizedApi.otherCallsRequireSecretKey) { %>
    SharedPtr<String const> m_secretKey;<%
} else { %>
    SharedPtr<AuthTokens const> m_tokens;<%
} %>
};

}
